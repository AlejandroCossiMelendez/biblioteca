<%- include('../../partials/sidebar', {currentPage: 'users'}) %>

	<!-- Encabezado mejorado -->
	<header class="page-header bg-light py-4 mb-4 border-bottom">
		<div class="container-fluid">
			<div class="d-flex justify-content-between align-items-center">
				<div class="d-flex align-items-center">
					<div>
						<i class="fas fa-user-plus fa-2x"></i> Agregar Nuevo Usuario
					</div>
				</div>
				<div>
			</div>
		</div>
	</header>

<!-- Contenedor Principal -->
<div class="container-fluid">
    <!-- Tarjeta de Formulario -->
    <div class="card border-0 shadow-lg rounded-3 overflow-hidden mb-4">
        <div class="card-header bg-white py-3 border-bottom">
            <h2 class="h5 mb-0 text-primary">
                <i class="fas fa-user-cog me-2"></i>Información del Usuario
            </h2>
        </div>
        <div class="card-body p-4">
            <form id="userForm" action="/usuarios/add" method="POST" class="needs-validation" novalidate>
                <div class="row g-3">
                    <!-- Nombre de Usuario -->
                    <div class="col-md-6 mb-3">
                        <label for="username" class="form-label fw-semibold">Nombre de Usuario</label>
                        <div class="input-group input-group-lg">
                            <span class="input-group-text bg-light"><i class="fas fa-user text-primary"></i></span>
                            <input type="text" 
                                   class="form-control shadow-sm" 
                                   id="username" 
                                   name="username" 
                                   required 
                                   pattern="[a-zA-Z0-9]{4,20}"
                                   title="4-20 caracteres alfanuméricos"
                                   placeholder="Ej. jperez2023">
                        </div>
                        <div class="form-text mt-1">4-20 caracteres alfanuméricos</div>
                    </div>

                    <!-- Contraseña -->
                    <div class="col-md-6 mb-3">
                        <label for="password" class="form-label fw-semibold">Contraseña</label>
                        <div class="input-group input-group-lg">
                            <span class="input-group-text bg-light"><i class="fas fa-lock text-primary"></i></span>
                            <input type="password" 
                                   class="form-control shadow-sm" 
                                   id="password" 
                                   name="password" 
                                   required
                                   minlength="8"
                                   placeholder="Mínimo 8 caracteres">
                            <button class="btn btn-outline-secondary toggle-password" type="button">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                        <div class="form-text mt-1">Mínimo 8 caracteres</div>
                    </div>

                    <!-- Nombre Completo -->
                    <div class="col-md-6 mb-3">
                        <label for="full_name" class="form-label fw-semibold">Nombre Completo</label>
                        <div class="input-group input-group-lg">
                            <span class="input-group-text bg-light"><i class="fas fa-id-card text-primary"></i></span>
                            <input type="text" 
                                   class="form-control shadow-sm" 
                                   id="full_name" 
                                   name="full_name" 
                                   required 
                                   placeholder="Ej. Juan Pérez López">
                        </div>
                    </div>

                    <!-- Correo Electrónico -->
                    <div class="col-md-6 mb-3">
                        <label for="email" class="form-label fw-semibold">Correo Electrónico</label>
                        <div class="input-group input-group-lg">
                            <span class="input-group-text bg-light"><i class="fas fa-envelope text-primary"></i></span>
                            <input type="email" 
                                   class="form-control shadow-sm" 
                                   id="email" 
                                   name="email" 
                                   required 
                                   placeholder="Ej. usuario@dominio.com">
                        </div>
                    </div>

                    <!-- Rol -->
                    <div class="col-md-6 mb-3">
                        <label for="role_id" class="form-label fw-semibold">Rol</label>
                        <div class="input-group input-group-lg">
                            <span class="input-group-text bg-light"><i class="fas fa-user-tag text-primary"></i></span>
                            <select class="form-select shadow-sm" id="role_id" name="role_id" required>
                                <option value="">Seleccione un rol</option>
                                <option value="2">Bibliotecario</option>
                                <option value="3">Usuario</option>
                            </select>
                        </div>
                    </div>
                </div>

                <!-- Botones de Acción -->
                <div class="d-flex justify-content-between pt-4 mt-3 border-top">
                    <a href="/usuarios" class="btn btn-outline-secondary px-4 rounded-pill">
                        <i class="fas fa-times me-2"></i> Cancelar
                    </a>
                    <button type="submit" class="btn btn-primary px-4 rounded-pill">
                        <i class="fas fa-user-plus me-2"></i> Registrar Usuario
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<%- include('../../partials/footer') %>
<!-- Script de Validación y Funcionalidad Mejorado -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Mostrar notificaciones iniciales
        showFlashMessages();

        // Configuración de SweetAlert2
        const swalConfig = {
            error: {
                icon: 'error',
                confirmButtonColor: '#d33',
                confirmButtonText: 'Entendido'
            },
            success: {
                icon: 'success',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'Continuar',
                timer: 3000
            },
            warning: {
                icon: 'warning',
                confirmButtonColor: '#ffc107',
                confirmButtonText: 'Entendido'
            },
            loading: {
                title: 'Procesando...',
                html: 'Por favor espere mientras registramos al usuario',
                allowOutsideClick: false,
                didOpen: () => Swal.showLoading()
            }
        };

        // Función para mostrar mensajes flash
        function showFlashMessages() {
            <% if (messages.error) { %>
                Swal.fire({
                    ...swalConfig.error,
                    title: 'Error al registrar',
                    text: '<%= messages.error %>'
                });
            <% } %>
            
            <% if (messages.success) { %>
                Swal.fire({
                    ...swalConfig.success,
                    title: 'Éxito',
                    text: '<%= messages.success %>'
                });
            <% } %>
        }

        // Configurar validación de formularios
        setupFormValidation();

        // Configurar toggle de contraseña
        setupPasswordToggle();

        // Configurar envío AJAX del formulario
        setupAjaxFormSubmit();

        // Función para configurar validación de formularios
        function setupFormValidation() {
            const forms = document.querySelectorAll('.needs-validation');
            
            forms.forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                        
                        Swal.fire({
                            ...swalConfig.warning,
                            title: 'Formulario incompleto',
                            text: 'Por favor complete todos los campos requeridos correctamente'
                        });
                    }
                    
                    form.classList.add('was-validated');
                }, false);
            });
        }

        // Función para alternar visibilidad de contraseña
        function setupPasswordToggle() {
            document.querySelectorAll('.toggle-password').forEach(button => {
                button.addEventListener('click', function() {
                    const input = this.parentElement.querySelector('input');
                    const icon = this.querySelector('i');
                    const isPassword = input.getAttribute('type') === 'password';
                    
                    input.setAttribute('type', isPassword ? 'text' : 'password');
                    icon.classList.toggle('fa-eye');
                    icon.classList.toggle('fa-eye-slash');
                    
                    // Enfocar el input después de cambiar el tipo
                    input.focus();
                });
            });
        }
        // En tu función setupAjaxFormSubmit()
        function setupAjaxFormSubmit() {
            const userForm = document.getElementById('userForm');
            if (!userForm) return;

            userForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                if (!this.checkValidity()) {
                    this.classList.add('was-validated');
                    return;
                }

                try {
                    // Mostrar loader
                    Swal.fire(swalConfig.loading);
                    
                    // Crear objeto con los datos del formulario
                    const formData = {
                        username: this.username.value,
                        password: this.password.value,
                        full_name: this.full_name.value,
                        email: this.email.value,
                        role_id: this.role_id.value
                    };
                    
                    const response = await fetch(this.action, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        body: JSON.stringify(formData)
                    });

                    // Resto del código permanece igual...
                    const contentType = response.headers.get('content-type');
                    if (!contentType || !contentType.includes('application/json')) {
                        throw new Error('La respuesta del servidor no es válida');
                    }

                    const data = await response.json();

                    if (!response.ok || !data.success) {
                        throw new Error(data.message || 'Error en la respuesta del servidor');
                    }

                    await Swal.fire({
                        ...swalConfig.success,
                        title: 'Usuario registrado',
                        text: data.message
                    });
                    
                    window.location.href = '/usuarios';
                    
                } catch (error) {
                    console.error('Error:', error);
                    await Swal.fire({
                        ...swalConfig.error,
                        title: 'Error',
                        text: error.message || 'Ocurrió un error al procesar la solicitud'
                    });
                }
            });
        }
    });
</script>